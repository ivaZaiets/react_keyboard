{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","item","document","addEventListener","event","setState","key","updateInnerHtml","removeEventListener","this","message","element","getElementById","innerHTML","className","id","React","Component","ReactDOM","render"],"mappings":"oNAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,KAAMG,EAAME,MAC5B,EAAKC,gBAAL,mCAAiD,EAAKP,MAAMC,KAA5D,WARN,kCAYE,WACEC,SAASM,oBAAoB,QAASC,KAAKF,mBAb/C,6BAgBE,SAAgBG,GACd,IAAIC,EAAUT,SAASU,eAAe,gBACtB,OAAZD,IACFA,EAAQE,UAAYH,KAnB1B,oBAuBE,WACE,OACE,qBAAKI,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAeC,GAAG,eAA/B,2CA1BR,GAAyBC,IAAMC,W,MCE/BC,IAASC,OACP,cAAC,EAAD,IACAjB,SAASU,eAAe,W","file":"static/js/main.4992cb76.chunk.js","sourcesContent":["import React from 'react';\n/*eslint-disable*/\n\nexport class App extends React.Component {\n  state = {\n    item: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ item: event.key });\n      this.updateInnerHtml(`The last pressed key is [${this.state.item}]`);\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.updateInnerHtml);\n  }\n\n  updateInnerHtml(message: any) {\n    let element = document.getElementById(\"some-message\");\n    if (element !== null) {\n      element.innerHTML = message\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\" id=\"some-message\">Nothing was pressed yet</p>\n      </div>\n    );\n  }\n}\n\n// document.addEventListener('keyup', (event) => {\n//   document.write(event.key)\n// });\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}